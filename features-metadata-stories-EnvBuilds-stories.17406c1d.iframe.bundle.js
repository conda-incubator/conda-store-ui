"use strict";(self.webpackChunk_conda_store_conda_store_ui=self.webpackChunk_conda_store_conda_store_ui||[]).push([[21],{"./src/features/metadata/stories/EnvBuilds.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>EnvBuilds_stories});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),react=__webpack_require__("./node_modules/react/index.js"),store=__webpack_require__("./src/store/index.ts"),EnvBuilds=__webpack_require__("./src/features/metadata/components/EnvBuilds.tsx");function createBuild(id,status){return{id,environment_id:1,specification:{id:1,name:"test",spec:{},sha256:"697434666a1c747d80df95189ad5750c1496287871779d2a2919db6cb768a182",created_on:"2022-11-08T14:28:05.655564"},packages:[],status,status_info:null,size:0,scheduled_on:"2022-11-08T14:28:05.655564",started_on:"2022-11-08T14:28:05.655564",ended_on:"2022-11-08T14:28:05.655564",build_artifacts:[]}}const mockBuilds=[createBuild(1,"COMPLETED"),createBuild(2,"FAILED"),createBuild(3,"BUILDING")],EnvBuilds_stories={component:EnvBuilds.F,decorators:[Story=>react.createElement(es.Kq,{store:store.M},react.createElement(Story,null))]},Primary={args:{currentBuildId:1,selectedBuildId:1,mode:"read-only",builds:mockBuilds},render:function Render(args){const[{selectedBuildId=args.selectedBuildId},updateArgs]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useArgs)();return store.M.subscribe((()=>{const{id:nextSelectedBuildId=args.selectedBuildId}=store.M.getState().enviroments.currentBuild;updateArgs({selectedBuildId:nextSelectedBuildId})})),react.createElement(EnvBuilds.F,{...args,selectedBuildId})}},__namedExportsOrder=["Primary"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    currentBuildId: 1,\n    selectedBuildId: 1,\n    mode: "read-only",\n    builds: mockBuilds\n  },\n  render: function Render(args: IEnvBuildsProps) {\n    const [{\n      selectedBuildId = args.selectedBuildId\n    }, updateArgs] = useArgs();\n    const handleChangeToSelectedBuildId = () => {\n      const {\n        id: nextSelectedBuildId = args.selectedBuildId\n      } = store.getState().enviroments.currentBuild;\n      updateArgs({\n        selectedBuildId: nextSelectedBuildId\n      });\n    };\n    store.subscribe(handleChangeToSelectedBuildId);\n    return <EnvBuilds {...args} selectedBuildId={selectedBuildId} />;\n  }\n}',...Primary.parameters?.docs?.source}}}},"./src/store/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>store});var redux_toolkit_esm=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js"),api=__webpack_require__("./src/features/api/index.ts"),channels=__webpack_require__("./src/features/channels/index.tsx"),dependencies=__webpack_require__("./src/features/dependencies/index.tsx"),environmentDetails=__webpack_require__("./src/features/environmentDetails/index.tsx"),requestedPackages=__webpack_require__("./src/features/requestedPackages/index.tsx"),environmentVariables=__webpack_require__("./src/features/environmentVariables/index.tsx"),tabs=__webpack_require__("./src/features/tabs/index.tsx"),metadata=__webpack_require__("./src/features/metadata/index.tsx");const environmentCreateSlice=(0,redux_toolkit_esm.Z0)({name:"environmentCreate",initialState:{name:"",description:"",requestedPackages:[],channels:[],environmentVariables:{}},reducers:{nameChanged:(state,action)=>{state.name=action.payload},descriptionChanged:(state,action)=>{state.description=action.payload},channelsChanged:(state,action)=>{state.channels=action.payload},requestedPackagesChanged:(state,action)=>{state.requestedPackages=action.payload},requestedPackageRemoved:(state,action)=>{state.requestedPackages=state.requestedPackages.filter((p=>p!==action.payload))},requestedPackageUpdated:(state,action)=>{const{currentPackage,updatedPackage}=action.payload;state.requestedPackages=state.requestedPackages.map((p=>p===currentPackage?updatedPackage:p))},editorCodeUpdated:(state,action)=>{state.requestedPackages=action.payload.dependencies,state.channels=action.payload.channels,state.environmentVariables=action.payload.variables},environmentCreateStateCleared:state=>{state.name="",state.description="",state.channels=[],state.requestedPackages=[],state.environmentVariables={}}}}),{nameChanged,descriptionChanged,channelsChanged,requestedPackagesChanged,requestedPackageRemoved,requestedPackageUpdated,editorCodeUpdated,environmentCreateStateCleared}=environmentCreateSlice.actions;var reducer=__webpack_require__("./src/features/namespaces/reducer.ts"),environments_reducer=__webpack_require__("./src/features/environments/reducer.ts"),notificationSlice=__webpack_require__("./src/features/notification/notificationSlice.ts");const rootReducer={[api.l.reducerPath]:api.l.reducer,channels:channels.BC.reducer,requestedPackages:requestedPackages.Yh.reducer,environmentVariables:environmentVariables.l.reducer,tabs:tabs.rV.reducer,enviroments:metadata.DX.reducer,environmentDetails:environmentDetails.Or.reducer,dependencies:dependencies.iv.reducer,environmentCreate:environmentCreateSlice.reducer,namespaces:reducer.to.reducer,environments:environments_reducer.bC.reducer,notification:notificationSlice.yg.reducer},store=(0,redux_toolkit_esm.U1)({reducer:rootReducer,middleware:getDefaultMiddleware=>getDefaultMiddleware().concat(api.l.middleware)})}}]);