# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: JavaScript tests (Jest)
# This CI workflow uses Jest, which runs in a Node.js environment, to test the JavaScript code.
# Jest allows JavaScript modules to be loaded and tested in isolation.
# By contrast, the Playwright CI workflow uses Playwright, which loads the entire app in the browser and simulates user interactions.

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn' 
        # https://github.com/actions/setup-node?tab=readme-ov-file#caching-global-packages-data
    - run: yarn install --immutable
      # https://yarnpkg.com/cli/install#options
    - run: yarn test
